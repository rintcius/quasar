#!/usr/bin/env bash

set -euo pipefail # STRICT MODE
IFS=$'\n\t'       # http://redsymbol.net/articles/unofficial-bash-strict-mode/

if ! type "aws" > /dev/null; then
  pip install awscli --user
fi

TARGETS=".targets"
NUM=$TRAVIS_BUILD_NUMBER
TRAVISIP=$(curl -s checkip.dyndns.org | sed -e 's/.*Current IP Address: //' -e 's/<.*$//')

export AWS_ACCESS_KEY_ID=$(openssl rsautl -inkey ./scripts/key.txt -decrypt < ./scripts/aws-access-key-id.bin)
export AWS_SECRET_ACCESS_KEY=$(openssl rsautl -inkey ./scripts/key.txt -decrypt < ./scripts/aws-secret-access-key.bin)

echo "Travis public IP is: $TRAVISIP"

if [[ "$1" = "upload" ]]; then
  echo "uploading $TARGETS to s3://quasar-build-cache/$NUM ..."
  aws s3 --only-show-errors cp $TARGETS s3://quasar-build-cache/$NUM/$TARGETS --recursive
  echo "done uploading!"
elif [[ "$1" = "download" ]]; then
  echo "downloading $TARGETS from s3://quasar-build-cache/$NUM ..."
  aws s3 --only-show-errors cp s3://quasar-build-cache/$NUM/$TARGETS $TARGETS --recursive
  echo "done downloading!"
elif [[ "$1" = "cleanup" ]]; then
  echo "cleaning up s3://quasar-build-cache/$NUM ..."
  aws s3 --only-show-errors rm s3://quasar-build-cache/$NUM --recursive
  echo "done cleaning up!"
elif [[ "$1" = "cacheCleanUp" ]]; then
  LIST=$(aws s3 ls s3://quasar-build-cache |  awk '{print $2}' | cut -d"/" -f1)
  OLDBUILDNUM=$((NUM + 50))
  echo "cleaning up old s3 caches"
  while read -r buildNum;
  do
    if (( $buildNum >= $OLDBUILDNUM ));
    then
      echo "cleaning up cache s3://quasar-build-cache/$buildNum ..."
      aws s3 --only-show-errors rm s3://quasar-build-cache/$OLDBUILDNUM --recursive
    fi
  done <<< "$LIST"
  echo "done cleaning up $buildNum"
else
  echo "Usage: ./scripts/s3Cache upload | download | cleanup"
fi
