/*
 * Copyright 2014â€“2018 SlamData Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package quasar.datagen

import scalaz.{Equal, Show}

/** Information about the source of an SST, whether it was generated by
  * observing all elements of a dataset or just a sample.
  */
sealed abstract class SstSource {
  def fold[A](sample: => A, whole: => A): A =
    this match {
      case SstSource.Sample => sample
      case SstSource.Whole => whole
    }
}

object SstSource {
  case object Sample extends SstSource
  case object Whole extends SstSource

  implicit val equal: Equal[SstSource] =
    Equal.equalA

  implicit val show: Show[SstSource] =
    Show.showFromToString
}
